---
interface Props {
  text: string;
  fontSize: string; // any unit
  duration: string; // any unit
  class?: string;
}
const { text, fontSize, duration, class: className, ...props } = Astro.props;
const regex = /(?<time>\d+(?:\.\d+)?)(?<unit>[^\d\.]+)/;
const result = duration.match(regex);

const { time, unit } = result?.groups!;

const delay = +(+time / text.length).toFixed(2);

const textArray = text.split('');
---

<ul data-style="none" class={className} {...props}>
  {
    textArray.map((letter, index) => {
      const ownDelay = delay * index;
      return <li style={`--delay: ${ownDelay}${unit}`}>{letter}</li>;
    })
  }
</ul>

<style define:vars={{ fontSize, duration }}>
  ul {
    display: flex;
    justify-content: center;
    align-items: center;
    width: max-content;
    font-family: serif;
    li {
      transition: var(--duration);
      color: #fff;
      font-weight: bold;
      font-size: var(--fontSize);
      letter-spacing: 0.5rem;
    }

    &:hover {
      li {
        /* STRANGE - different behaviors */
        /* transform: translateY(calc(var(--fontSize) * -2)) rotate(45deg); */
        transform: rotate(45deg) translateY(calc(var(--fontSize) * -2));

        opacity: 0;
        filter: blur(20px);
        transition-delay: var(--delay);
      }
    }
  }
</style>
