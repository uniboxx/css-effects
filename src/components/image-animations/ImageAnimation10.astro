---
/*
INFORMATIONS
set: 
- image as imagemetadata
- alt as string
- width and/or height as numbers
set optionally:
- class as string
- duration as string 'value and s | ms' 
- format as string
- loading as 'lazy' | 'eager' | null
- hoverBgColor as string
*/
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

interface Props {
  class?: string;
  duration?: string;
  image: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  format?: string;
  loading?: 'lazy' | 'eager' | null;
  hoverBgColor?: string;
}
// prettier-ignore
const { class:className, duration='.3s', image, alt, width, height, format = 'webp', loading='lazy', hoverBgColor='#006266', ...attrs } = Astro.props;
---

<!-- prettier-ignore -->
<div class:list={[className, "container"]}>
  <Image src={image} alt={alt} loading={loading} width={width} height={height} format={format} {...attrs}/>
  <div class="caption">
    <slot />
  </div>
</div>

<style define:vars={{ duration, hoverBgColor }}>
  .container {
    position: relative;
    transition: var(--duration);
    border: 10px solid #fff;
    background-color: #444;
    overflow: hidden;
    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .caption {
      position: absolute;
      transition: var(--duration);
      inset: 0;
      color: #fff;
      text-align: center;
      & > *:first-child {
        & > * {
          opacity: 0;
          transition: var(--duration);
        }
        & > *:nth-child(-n + 2) {
          transform: scale(10);
        }
        & > *:last-child {
          transform: translateY(300%);
        }
      }
    }
    &::before {
      position: absolute;
      opacity: 0;
      transition: var(--duration);
      inset: 0;
      background-color: var(--hoverBgColor);
      content: '';
    }

    &:hover {
      .caption {
        & > *:first-child {
          & > * {
            opacity: 1;
            transition-delay: 0.2s;
          }
          & > *:nth-child(-n + 2) {
            transform: scale(1);
          }
          & > *:last-child {
            transform: translateY(0%);
          }
        }
      }
      &::before {
        opacity: 1;
      }
    }
  }
</style>
