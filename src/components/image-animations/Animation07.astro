---
const { width, height } = Astro.props;
---

<figure>
  <slot />
  <slot name="caption" />
</figure>

<style define:vars={{ width, height }}>
  figure {
    --duration: 0.25s;
    --primary-color: #2d343688;
    position: relative;
    transition: var(--duration);
    width: calc(var(--width) * 1px);
    height: calc(var(--height) * 1px);
    overflow: hidden;
    img {
      transition: var(--duration);
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
    figcaption {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      flex-direction: column;
      justify-content: center;
      gap: 1rem;
      transition: var(--duration);
      width: 100%;
      height: 100%;
      color: #fff;
      text-align: center;
      h3 {
        transform: translate(50%, -170%);
        transition: var(--duration);
        background-color: var(--primary-color);
      }
      p,
      a {
        align-self: center;
        transition: var(--duration);
      }
      p {
        transform: translate(-60%, 220%);
        width: 80%;
      }
      a {
        transform: translateY(200%);
        background-color: black;
        padding: 10px;
        color: inherit;
        text-decoration: none;
        text-transform: uppercase;
      }
    }
    &::after {
      position: absolute;
      top: 0;
      left: 0;
      transform: translate(50%, 0%) rotate(45deg);
      transform-origin: left;
      transition: var(--duration);
      background-color: var(--primary-color);
      width: 200%;
      height: 200%;
      content: '';
    }

    &:hover {
      figcaption {
        h3 {
          transform: translate(0, 0);
          transition-delay: 0.3s;
        }
        p {
          transform: translate(0, 0);
          transition-delay: 0.4s;
        }
        a {
          transform: translateY(0);
          transition-delay: 0.5s;
        }
      }
      &::after {
        transform: translate(-10%, -60%) rotate(45deg);
      }
    }
  }
</style>
