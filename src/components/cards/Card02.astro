---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

/* INFORMATIONS:
set: 
- image as ImageMetadata
- alt as string 
- width and/or height as numbers
- loading as 'lazy' or 'eager' or null
- format as string
set optionally:
- class as string
- duration as string 'value and s | ms' 
- cardHeight as string (starting card height)
*/
interface Props {
  class?: string;
  duration?: string;
  cardHeight?: string;
  image: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager' | null;
  format?: string;
}
// prettier-ignore
const { class: className, duration =`.5s`,  image, alt, width=250,  height=250, cardHeight=`${height}px`, loading=`lazy`, format='webp',  ...attrs } = Astro.props;
---

<!-- prettier-ignore -->
<article class={className} {...attrs}>
  <figure>
    <Image src={image} alt={alt} priority width={width} height={height} format={format} loading={loading} />
  </figure>
  <div class="content"><slot /></div>
</article>

<style define:vars={{ duration, cardHeight }}>
  article {
    position: relative;
    transition: var(--duration);
    box-shadow: 0 10px 30px #26262688;
    background-color: #fafafa;
    padding: 1rem 2rem;
    height: var(--cardHeight);
    &,
    img {
      border-radius: 10px;
    }

    figure {
      position: relative;
      transform: translateY(-3rem);
      z-index: 1;
      width: 100%;
      height: 100%;
      img {
        width: 100%;
        height: auto;
      }
    }
    .content {
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: 1rem;
      transform: translateY(-200%);
      opacity: 0;
      transition: calc(var(--duration) * 0.6);
      padding: 0.5rem 1rem;
      color: #111;
      p {
        color: #26262688;
      }
    }

    &:hover {
      height: 100%;
      .content {
        transform: translateY(-120%);
        opacity: 1;
      }
    }
  }
</style>
