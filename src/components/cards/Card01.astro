---
/* INFORMATIONS:
set optionally:
- class as string
- duration as string 'value and s | ms' 
- colors as string (hoverBgColor, hoverColor)
- borderHeight as string (starting height)
*/
interface Props {
  class?: string;
  duration?: string;
  colors?: string;
  borderHeight?: string;
}
// prettier-ignore
const { class: className, duration ='.5s', colors = '#ff56ac, #fafafa', borderHeight='5px', ...attrs } = Astro.props;

const [hoverBgColor, hoverColor] = colors.split(',');
---

<article class={className} {...attrs}><slot /></article>

<style define:vars={{ duration, hoverBgColor, hoverColor, borderHeight }}>
  article {
    display: flex;
    position: relative;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    z-index: 0;
    box-shadow: 0 10px 30px #26262688;
    background-color: var(--hoverColor);
    padding: 2rem;

    p {
      color: #26262688;
    }
    a {
      box-shadow: 0 2px 20px #0000000d;
      border-radius: 5px;
      background-color: inherit;
      padding: 0.5rem;
      font-weight: 600;
    }
    h3,
    p,
    &::after {
      transition: var(--duration);
    }
    &::after {
      position: absolute;
      bottom: 0;
      left: 0;
      z-index: -1;
      border-radius: inherit;
      background-color: var(--hoverBgColor);
      width: 100%;
      height: var(--borderHeight);
      content: '';
    }

    &:hover {
      h3,
      p {
        color: var(--hoverColor);
      }

      &::after {
        height: 100%;
      }
    }
  }
</style>
