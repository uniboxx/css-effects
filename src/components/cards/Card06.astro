---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

/* INFORMATIONS:
set: 
- image as ImageMetadata
- alt as string 
- width and/or height as numbers
- loading as 'lazy' or 'eager' or null (default 'lazy')
- format as string
- caption as string text
set optionally:
- class as string
- duration as string 'value and s | ms' 
- cardHeight as string (starting card height)
*/
interface Props {
  class?: string;
  duration?: string;
  colors?: string;
  image: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager' | null;
  format?: string;
  caption?: string;
}
// prettier-ignore
const { class: className, duration =".5s", colors='#ff0057, #fafafa',  image, alt, width=300,  height, loading="lazy", format="webp", caption='Design',  ...attrs } = Astro.props;

const [hoverBgColor, hoverColor] = colors.split(',');
const id = Math.random().toString(36).slice(2, 11);
---

<article id={id} class={className} {...attrs}>
  <figure>
    <Image
      src={image}
      alt={alt}
      width={width}
      height={height}
      loading={loading}
      format={format}
    />
  </figure>
  <div class="details"><slot /></div>
</article>

<style define:vars={{ duration, hoverBgColor, hoverColor }}>
  article {
    position: relative;
    cursor: pointer;
    box-shadow: 0 2px 10px #00000033;
    background-color: #fafafa;
    height: 400px;

    &,
    &::before,
    &::after {
      border-radius: 4px;
    }

    &::before,
    &::after {
      position: absolute;
      z-index: -1;
      transition: var(--duration);
      inset: 0;
      background-color: #fafafa;
      content: '';
    }

    figure {
      position: absolute;
      z-index: 1;
      transition: var(--duration);
      inset: 10px;
      background-color: #fafafa;

      img {
        position: absolute;
        inset: 0;
        height: 100%;
        object-fit: cover;
      }
    }
    .details {
      position: absolute;
      bottom: 0;
      left: 0;
      padding: 10px;
      width: 100%;
      height: max-content;
      color: #262626;
      font-size: 1.5rem;
      text-align: center;
    }

    &:hover {
      &::before,
      &::after {
        box-shadow: 0 2px 20px #00000033;
      }
      &::before {
        transform: rotate(20deg);
      }
      &::after {
        transform: rotate(10deg);
      }
      figure {
        bottom: var(--figure-bottom);
      }
    }
  }
</style>

<script define:vars={{ id }}>
  const article = document.getElementById(id);
  const details = article.querySelector('.details');

  const detailsHeight = getComputedStyle(details).height;

  article.style.cssText += `--figure-bottom: ${detailsHeight};`;
</script>
