---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

/* INFORMATIONS:
set: 
- image as ImageMetadata
- alt as string 
- width and/or height as numbers
- loading as 'lazy' or 'eager' or null (default 'lazy')
- format as string
- caption as string text
set optionally:
- class as string
- duration as string 'value and s | ms' 
- cardHeight as string (starting card height)
*/
interface Props {
  class?: string;
  duration?: string;
  colors?: string;
  image: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager' | null;
  format?: string;
  caption?: string;
}
// prettier-ignore
const { class: className, duration =".5s", colors='#ff0057, #fafafa',  image, alt, width=300,  height, loading="lazy", format="webp", caption='Design',  ...attrs } = Astro.props;

const [hoverBgColor, hoverColor] = colors.split(',');
---

<!-- prettier-ignore -->
<article class={className} {...attrs}>
  <figure>
    <Image src={image} alt={alt} width={width} height={height} loading={loading} format={format}  />
    <figcaption>{caption}</figcaption>
  </figure>
  <div class="content"><slot /></div>
</article>

<style define:vars={{ duration, hoverBgColor, hoverColor }}>
  article {
    position: relative;
    cursor: pointer;
    box-shadow: 0 10px 30px var(--box-shadow-color);
    border-radius: 10px;

    figure,
    .content {
      display: flex;
      position: relative;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      gap: 1rem;
      transition: var(--duration);
    }

    figure {
      transform: translateY(50%);
      z-index: 1;
      background-color: #262626;
      padding: 20px;
      height: max-content;
      & > * {
        opacity: 0.2;
      }

      img {
        height: 100%;
        object-fit: cover;
      }
      figcaption {
        color: var(--hoverColor);
        font-size: 1.5rem;
      }
    }

    .content {
      transform: translateY(-50%);
      box-shadow: 0 20px 50px #000000cc;
      padding: 1rem 2rem;
      color: #262626;
      h3 {
        font-weight: 700;
      }

      p {
        font-size: 0.8rem;
      }
      a {
        transition: 0.3s;
        border: 1px solid #262626;
        border-radius: 10px;
        background-color: #fafafa;
        padding: 5px 10px;
        width: max-content;
        font-weight: 700;
        font-size: 0.9rem;
        &:hover {
          border: 1px solid transparent;
          background-color: var(--hoverBgColor);
          color: #fafafa;
        }
      }
    }

    &:hover {
      figure,
      .content {
        transform: translateY(0%);
      }
      figure {
        background-color: var(--hoverBgColor);
        & > * {
          opacity: 1;
        }
      }
    }
  }
</style>
