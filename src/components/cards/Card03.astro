---
import type { ImageMetadata } from 'astro';
import { Image } from 'astro:assets';

/* INFORMATIONS:
set: 
- image as ImageMetadata
- alt as string 
- width and/or height as numbers
- loading as 'lazy' or 'eager' or null
set optionally:
- class as string
- duration as string 'value and s | ms' 
- cardHeight as string (starting card height)
*/
interface Props {
  class?: string;
  duration?: string;
  cardHeight?: string;
  image: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  format?: string;
  loading?: 'lazy' | 'eager' | null;
  gradients?: string;
}
// prettier-ignore
const { class: className, duration =".5s",  image, alt, height=400, cardHeight="250px", format='webp', loading="lazy", gradients='#d41e31, #491f8f', ...attrs } = Astro.props;

const [gradient1, gradient2] = gradients.split(',');
---

<!-- prettier-ignore -->
<article class={className} {...attrs}>
  <figure>
    <Image src={image} alt={alt} height={height} format={format} loading={loading} />
  </figure>
  <div class="content"><slot /></div>
</article>

<style define:vars={{ duration, cardHeight, gradient1, gradient2 }}>
  article {
    position: relative;
    transition: var(--duration);
    box-shadow: 0 10px 30px #26262688;
    border-radius: 10px;
    background: linear-gradient(45deg, var(--gradient1), var(--gradient2));
    height: var(--cardHeight);

    figure {
      position: absolute;
      bottom: 0;
      left: 0;
      transform: scale(1.2);
      transform-origin: bottom;
      z-index: 100;
      transition: calc(var(--duration) * 0.6);
      width: 100%;
      height: var(--cardHeight);
      pointer-events: none;

      img {
        margin: 0 auto;
        border-radius: 10px;
        width: auto;
        height: 100%;
      }
    }
    .content {
      display: flex;
      position: absolute;
      top: 0;
      left: 25%;
      flex-direction: column;
      justify-content: center;
      gap: 0.5rem;
      opacity: 0;
      z-index: 101;
      transition: 0.3s;
      padding: 0.5rem 1rem;
      width: 60%;
      height: 100%;
      color: #fff;
      font-size: 0.8rem;
      h3 {
        font-weight: 700;
        font-size: 0.8rem;
      }

      p {
        align-self: center;
        color: #aaa;
      }
      a {
        border-radius: 10px;
        background-color: #fafafa;
        padding: 5px 10px;
        width: max-content;
        color: black;
      }
    }

    &:hover {
      figure {
        transform: translateX(40%) scale(1.4);
      }
      .content {
        left: 0;
        opacity: 1;
      }
    }
  }
</style>
