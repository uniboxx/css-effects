---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'a'> {
  class: string;
  duration?: string;
  text?: string;
  colors?: string;
}
const {
  class: className,
  duration = '.5s',
  text = 'Clip09',
  colors = '#000, #500',
  ...rest
} = Astro.props;
const [color, hoverColor] = colors.split(',');
---

<div id="container09" class={className}>
  <a data-text={text} {...rest}>{text}</a>
</div>

<style define:vars={{ duration, text, color, hoverColor }}>
  #container09 {
    position: relative;
    overflow: hidden;
    &::before {
      position: absolute;
      top: 50%;
      left: -100%;
      transform: translateY(-50%);
      transition: var(--duration);
      background-color: var(--color);
      width: 100%;
      height: 0.0166em;
      min-height: 1px;
      content: '';
    }
    a {
      position: relative;
      color: transparent;
      font: inherit;
      text-align: center;
      &,
      &::before,
      &::after {
        transition: var(--duration);
        padding: 0.25em 0.5em;
      }
      &::before,
      &::after {
        position: absolute;
        top: 0;
        left: 0;
        transition-delay: calc(var(--duration) / 2);
        content: attr(data-text);
        color: var(--color);
      }
      &::before {
        clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
      }
      &::after {
        clip-path: polygon(0 100%, 100% 100%, 100% 50%, 0 50%);
      }
    }
    &:hover {
      &::before {
        left: 100%;
      }
      a {
        &::before,
        &::after {
          color: var(--hoverColor);
        }
        &::before {
          transform: translate(0.15em, -0.05em);
        }
        &::after {
          transform: translate(-0.15em, 0.05em);
        }
      }
    }
  }
</style>
