---
interface Props {
  class?: string;
  text?: string;
  duration?: string;
  colors?: string;
}
const {
  class: className,
  text = 'Clip02',
  duration = '2s',
  colors = '#ee5253, #0a3d62',
  ...rest
} = Astro.props;
const [color1, color2] = colors.split(',');
---

<div id="loader02" class={className} {...rest}>
  <span class="top-half">{text}</span>
  <span class="bottom-half">{text}</span>
</div>

<style define:vars={{ duration, color1, color2 }}>
  #loader02 {
    position: relative;
    box-sizing: content-box;
    border: 0.15em solid var(--color2);
    border-radius: 0.2em;
    width: 100%;
    height: 1.25em;
    overflow: hidden;
    line-height: 1.25em;
    text-align: center;
    text-transform: uppercase;
    span {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      font-weight: 600;

      &.top-half {
        clip-path: polygon(0 0, 100% 0, 100% 50%, 0 50%);
        animation: splitting02 var(--duration) linear infinite;
        color: var(--color1);
      }
      &.bottom-half {
        clip-path: polygon(0 50%, 100% 50%, 100% 100%, 0 100%);
        animation: splitting02 var(--duration) linear infinite reverse;
        color: var(--color2);
      }
    }
  }
  @keyframes splitting02 {
    0% {
      transform: translateX(100%);
    }
    40%,
    60% {
      transform: translateX(0%);
    }

    100% {
      transform: translateX(-100%);
    }
  }
</style>
