---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'hoverBgColor, hoverColor' 
*/
import type { Polymorphic } from 'astro/types';

type Tag = 'a' | 'button';

// prettier-ignore
type Props<TagGeneric extends Tag> = {
  class?: string;
  duration?: string;
} & Polymorphic<{ as: TagGeneric }>;

const { class: classList, duration = '.2s', ...attrs } = Astro.props;

const Tag = attrs.href ? 'a' : 'button';
---

<Tag class={classList} {...attrs} style={`--duration: ${duration};`}
  ><slot /></Tag
>

<style>
  a,
  button {
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    z-index: 0;
    transition: var(--duration);
    cursor: pointer;

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      transition: calc(var(--duration) * 2);
      border-radius: inherit;
      background-color: inherit;
      width: 100%;
      height: 100%;
      content: '';
    }

    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
      &:active {
        transform: translateY(-1px);
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
      }
      &::before {
        transform: scale(1.4, 1.6);
        opacity: 0;
      }
    }
  }
</style>
