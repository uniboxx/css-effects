---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'hoverBgColor, hoverColor' 
*/

type Tag = 'a' | 'button';
type AnchorProps = {
  href: string;
};
type ButtonProps = {
  type?: 'submit' | 'reset' | 'button';
};

// prettier-ignore
type Props<TagGeneric extends Tag> = {
  tag?: TagGeneric;
  class?: string;
  duration?: string;
  colors?: string;
  [key: string]: string | string[] | undefined;
} & (TagGeneric extends 'a' ? AnchorProps : ButtonProps);

const {
  href,
  tag: Tag = href ? 'a' : 'button',
  type,
  class: classList,
  duration = '.2s',
  colors = '#272727, #f6f6f6',
  text = 'Link 17',
  hoverSize1 = '2em',
  ...rest
} = Astro.props;

const attributesBasedOnTag = Tag === 'a' ? { href } : { type };
const { ...attrs } = { ...attributesBasedOnTag, ...rest };

const firstLetter = text[0];
const restLetters = text.slice(1);

const [hoverBgColor, hoverColor] = colors.split(',');
const style = `--duration: ${duration}; --hoverBgColor: ${hoverBgColor}; --hoverColor: ${hoverColor};--hoverSize1: ${hoverSize1}`;
---

<Tag class={classList} {...attrs} style={style}>
  <span class="first-letter" data-content={firstLetter}>{firstLetter}</span
  ><span>{restLetters}</span>
  <slot />
</Tag>

<style>
  a,
  button {
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    transition: var(--duration);
    cursor: pointer;

    &::before {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      z-index: -1;
      transition: calc(var(--duration) * 3);
      background: var(--hoverBgColor);
      width: 100%;
      height: 100%;
      content: '';
    }
    .first-letter {
      color: transparent;
      &::before {
        position: absolute;
        transition: var(--duration);
        content: attr(data-content);
        color: var(--hoverBgColor);
      }
    }

    &:hover {
      color: var(--hoverColor);
      .first-letter::before {
        transform: translate(-45%, -30%) rotate(360deg);
        color: var(--hoverColor);
        font-size: var(--hoverSize1);
      }
      &::before {
        transform: rotate(15deg);
        opacity: 1;
      }
    }
  }
</style>
