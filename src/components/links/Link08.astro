---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'hoverBgColor, hoverColor' 
*/
import type { Polymorphic } from 'astro/types';

type Tag = 'a' | 'button';

// prettier-ignore
type Props<TagGeneric extends Tag> = {
  class?: string;
  duration?: string;
  colors?: string;
} & Polymorphic<{ as: TagGeneric }>;

const {
  class: classList,
  duration = '.5s',
  colors = '#262626, #fff',
  ...attrs
} = Astro.props;

const Tag = attrs.href ? 'a' : 'button';

const [hoverBgColor, hoverColor] = colors.split(',');
---

<Tag
  class={classList}
  {...attrs}
  style={`--duration: ${duration}; --hoverBgColor: ${hoverBgColor}; --hoverColor: ${hoverColor};`}
>
  <slot />
  <div class="after"><slot /></div>
</Tag>

<style>
  a,
  button {
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    overflow: hidden;
    .after {
      display: flex;
      position: absolute;
      top: 0;
      left: 0;
      justify-content: center;
      align-items: center;
      transform: scale(5);
      opacity: 0;
      transition: var(--duration);
      background-color: var(--hoverBgColor);
      width: 100%;
      height: 100%;
      color: white;
    }

    &:hover {
      .after {
        transform: scale(1);
        opacity: 1;
      }
    }
  }
</style>
