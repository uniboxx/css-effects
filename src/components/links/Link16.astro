---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'hoverBgColor, hoverColor' 
*/
import type { Polymorphic } from 'astro/types';

type Tag = 'a' | 'button';

// prettier-ignore
type Props<TagGeneric extends Tag> = {
  class?: string;
  duration?: string;
  colors?: string;
} & Polymorphic<{ as: TagGeneric }>;

const {
  class: classList,
  duration = '.25s',
  colors = '#c47135',
  ...attrs
} = Astro.props;

const Tag = attrs.href ? 'a' : 'button';

const [borderColor] = colors.split(',');
---

<Tag
  class={classList}
  {...attrs}
  style={`--duration: ${duration}; --borderColor: ${borderColor}; `}
  ><slot /></Tag
>

<style>
  a,
  button {
    display: flex;
    position: relative;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    background: var(--borderColor);

    &::before,
    &::after {
      position: absolute;
      transition: var(--duration);
      width: 1.4rem;
      height: 1.4rem;
      content: '';
    }

    &::before {
      top: -6px;
      left: -6px;
      border-top: 2px solid var(--borderColor);
      border-left: 2px solid var(--borderColor);
    }
    &::after {
      right: -6px;
      bottom: -6px;
      border-right: 2px solid var(--borderColor);
      border-bottom: 2px solid var(--borderColor);
    }

    &:hover {
      &::before,
      &::after {
        width: 100%;
        height: 100%;
      }
    }
  }
</style>
