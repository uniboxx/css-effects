---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'bgColor, color' 
*/
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'button'> {
  class?: string;
  duration?: string;
  colors?: string;
}
const {
  class: className,
  duration = '.7s',
  colors = '#fffa65, #262626',
  ...props
} = Astro.props;
const [bgColor, color] = colors.split(',');
---

<button class={className} {...props}>
  <slot />
  <div id="before"><slot /></div>
  <div id="after"><slot /></div>
</button>

<style define:vars={{ duration, bgColor, color }}>
  button {
    position: relative;
    transition: color var(--duration) ease-in-out;
    cursor: pointer;
    overflow: hidden;
    color: transparent !important;

    #before,
    #after {
      display: flex;
      position: absolute;
      flex-direction: column;
      justify-content: center;
      transition: transform var(--duration) ease-in-out;
      background-color: var(--bgColor);
      width: 100%;
      height: 100%;
      color: var(--color);
      font: inherit;
    }
    #before {
      bottom: 0;
      left: 0;
      transform: translate(-100%, 100%);
    }
    #after {
      top: 0;
      right: 0;
    }

    &:hover {
      #before {
        transform: translate(0, 0);
      }
      #after {
        transform: translate(100%, -100%);
      }
    }
  }
</style>
