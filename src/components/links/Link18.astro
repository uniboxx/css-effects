---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'borderColor' 
*/

type Tag = 'a' | 'button';
type AnchorProps = {
  href: string;
};
type ButtonProps = {
  type?: 'submit' | 'reset' | 'button';
};

// prettier-ignore
type Props<TagGeneric extends Tag> = {
  tag?: TagGeneric;
  class?: string;
  duration?: string;
  colors?: string;
  [key: string]: string | string[] | undefined;
} & (TagGeneric extends 'a' ? AnchorProps : ButtonProps);

const {
  href,
  tag: Tag = href ? 'a' : 'button',
  type,
  class: classList,
  duration = '.5s',
  colors = '#fff',
  ...rest
} = Astro.props;

const attributesBasedOnTag = Tag === 'a' ? { href } : { type };
const { ...attrs } = { ...attributesBasedOnTag, ...rest };

const [borderColor] = colors.split(',');
const style = `--duration: ${duration}; --borderColor: ${borderColor};`;
---

<Tag class={classList} {...attrs} style={style}>
  <span><slot /></span>
</Tag>

<style>
  a,
  button {
    position: relative;
    cursor: pointer;
    overflow: hidden;
    span {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    &::before,
    &::after,
    span::before,
    span::after {
      position: absolute;
      transition: var(--duration);
      background-color: var(--borderColor);
      content: '';
    }
    &::before,
    &::after {
      left: 0;
      transform: scaleX(0);
      width: 100%;
      height: 4px;
    }
    &::before {
      top: 0;
      transform-origin: left;
    }
    &::after {
      bottom: 0;
      transform-origin: right;
    }
    span::before,
    span::after {
      top: 0;
      transform: scaleY(0);
      width: 4px;
      height: 100%;
    }
    span::before {
      left: 0;
      transform-origin: bottom;
    }
    span::after {
      right: 0;
      transform-origin: top;
    }

    &:hover {
      &::before,
      &::after {
        transform: scaleX(1);
      }
      span {
        &::before,
        &::after {
          transform: scaleY(1);
        }
      }
    }
  }
</style>
