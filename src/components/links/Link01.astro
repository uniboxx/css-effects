---
/*
INFORMATIONS
set optionally:
- class 
- duration as string 'value and s | ms' 
- colors as string 'hoverBgColor, hoverColor' 
*/
import type { HTMLTag, Polymorphic } from 'astro/types';

// prettier-ignore
type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  class?: string;
  duration?: string;
  colors?: string;
}>
const {
  class: className,
  duration = '.5s',
  colors = '#fff200,  #333',
  ...attrs
} = Astro.props;

const Tag = attrs.href ? 'a' : 'button';

const [hoverBgColor, hoverColor] = colors.split(',');
---

<div><Tag class={className} {...attrs}><slot /></Tag></div>

<style define:vars={{ duration, hoverBgColor, hoverColor }}>
  div {
    a,
    button {
      display: flex;
      position: relative;
      justify-content: center;
      align-items: center;
      z-index: 0;
      transition: calc(var(--duration) * 2);
      cursor: pointer;
      width: 100%;
      overflow: hidden;

      &::before {
        position: absolute;
        top: 0;
        left: 0;
        transform: rotate(-90deg);
        transform-origin: bottom left;
        z-index: -1;
        transition: transform var(--duration) ease-in-out;
        background-color: var(--hoverBgColor);
        width: 100%;
        height: 100%;
        content: '';
      }
      &:hover {
        color: var(--hoverColor);
        &::before {
          transform: rotate(0);
        }
      }
    }
  }
</style>
