---
interface Props {
  text: string;
  duration?: string;
  class?: string;
  delay?: string;
}
const {
  text,
  duration = `${(text.length / 5).toFixed(1)}s`,
  class: className,
  delay = '0.1s',
  ...rest
} = Astro.props;
const arrayTxt = text.split('');
const regex = /(?<delayTime>[\d\.]+)(?<delayUnit>(s|ms)$)/;
const result = delay.match(regex)!;
const delayTime = +result.groups?.delayTime!;
const delayUnit = result.groups?.delayUnit;
---

<ul data-style="none" class={className} {...rest}>
  {
    arrayTxt.map((letter, index) => (
      <li style={`--letDelay: ${(delayTime * index).toFixed(2) + delayUnit}`}>
        {letter}
      </li>
    ))
  }
</ul>

<style define:vars={{ duration }}>
  ul {
    display: flex;
    gap: 5px;
    li {
      animation: lighting08 var(--duration) linear infinite;
      animation-delay: var(--letDelay);
      color: #484848;
    }
  }
  @keyframes lighting08 {
    0% {
      color: #484848;
      text-shadow: none;
    }
    90% {
      color: #484848;
      text-shadow: none;
    }
    100% {
      color: #fff900;
      text-shadow:
        0 0 0.0875em #fff900,
        0 0 0.625em #ff6c00;
    }
  }
</style>
