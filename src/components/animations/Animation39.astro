---
interface Props {
  class?: string;
  duration?: string;
  size?: string;
  bgColor?: string;
  color?: string;
}
const {
  class: className,
  size = '50px',
  color = '#fff',
  bgColor = '#00e1ffaa',
  duration = '2s',
} = Astro.props;
const regex = /(?<quantity>[\d\.]+)(?<unit>[a-z]+)/;
const result = duration.match(regex)!;
const quantity = +result.groups?.quantity!;
const unit = result.groups?.unit!;
---

<div id="container39" class={className}>
  <div class="content">
    <div class="cloud"></div>
    <div class="rain">
      {
        Array.from({ length: 20 }).map((_, idx) => {
          const delay = Math.floor(Math.random() * quantity * 10) / 10;
          return <span style={`--n: ${idx};--delay: ${delay}${unit}`} />;
        })
      }
    </div>
  </div>
</div>

<style define:vars={{ duration, size, bgColor, color }}>
  #container39 {
    display: flex;
    justify-content: center;
    align-items: center;
    background: var(--bgColor);
    width: 100%;
    height: 100%;
    .content {
      position: relative;
      border-bottom: calc(var(--size) * 0.06) solid var(--color);
      width: calc(var(--size) * 3.3);
      height: calc(var(--size) * 3.8);
      .cloud {
        position: relative;
        top: calc(var(--size));
        border-radius: var(--size);
        background: var(--color);
        width: 100%;
        height: var(--size);
        &::before,
        &::after {
          position: absolute;
          border-radius: 50%;
          background: var(--color);
          content: '';
        }
        &::before {
          top: calc(var(--size) / -2);
          left: calc(var(--size) / 5 * 2);
          width: calc(var(--size) * 1.1);
          height: calc(var(--size) * 1.1);
        }
        &::after {
          top: calc(var(--size) / -1.2);
          left: calc(var(--size) * 1.2);
          width: calc(var(--size) * 1.6);
          height: calc(var(--size) * 1.6);
        }
      }
      .rain {
        position: relative;
        top: calc(var(--size) / 1.3);
        z-index: 1;
        margin: 0 auto;
        width: 90%;
        height: calc(var(--size) * 1.92);
        span {
          position: absolute;
          top: 0%;
          left: calc(var(--n) * 5%);
          transform-origin: bottom;
          animation: rain39 var(--duration) linear infinite;
          animation-delay: var(--delay);
          border-radius: 50%;
          background: var(--color);
          width: calc(var(--size) / 12);
          height: calc(var(--size) / 12);
        }
      }
    }
  }

  @keyframes rain39 {
    0% {
      top: 0;
      transform: scale(1);
    }
    70% {
      top: 100%;
      transform: scale(1);
    }
    100% {
      top: 100%;
      transform: scale(0);
    }
  }
</style>
