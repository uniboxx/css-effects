---
interface Props {
  class?: string;
  duration?: string;
  width?: string;
  height?: string;
  lines?: number;
  origin?: 'center' | 'bottom' | 'top';
  color?: string;
}
const {
  class: className,
  lines = 8,
  duration = `${lines * 0.0875}s`,
  width = '4px',
  height = '30px',
  origin = 'center',
  color = '#fff',
} = Astro.props;
---

<div id="container25" class={className}>
  {
    Array.from({ length: lines }).map((_, idx) => {
      const left = `${(100 / lines) * idx}%`;
      const delay = idx > 0 && `${0.2 * idx}s`;
      return <div class="line25" style={`left: ${left};--delay: ${delay}`} />;
    })
  }
</div>

<style define:vars={{ duration, width, height, origin, color }}>
  #container25 {
    display: flex;
    justify-content: center;
    gap: calc(var(--width) / 2);
    .line25 {
      transform-origin: var(--origin);
      animation: anim25 var(--duration) linear infinite alternate;
      animation-delay: var(--delay);
      border-radius: 10px;
      background-color: var(--color);
      width: var(--width);
      height: var(--height);
    }
  }

  @keyframes anim25 {
    0% {
      transform: scaleY(0);
    }

    100% {
      transform: scaleY(1);
    }
  }
</style>
