---
interface Props {
  class?: string;
  duration?: string;
  size?: string;
}
const { class: className, duration = '2s', size = '20px' } = Astro.props;
const regex = /(?<quantity>[\d\.]+)(?<unit>[a-z]+)/;
const result = size.match(regex);
const { quantity, unit } = result?.groups ?? {};
const containerSize = `${+quantity * 2.5}${unit}`;
---

<div id="container21" class={className}>
  <span></span><span></span><span></span>
</div>

<style define:vars={{ duration, size, containerSize }}>
  #container21 {
    position: relative;
    width: var(--containerSize);
    height: var(--containerSize);
    span {
      position: absolute;
      top: 0;
      left: 0;
      animation: anim21Spans var(--duration) infinite linear;
      border-radius: 4px;
      background-color: #fff;
      width: var(--size);
      height: var(--size);
      &:nth-of-type(2) {
        animation-delay: calc(var(--duration) * 0.35);
      }
      &:nth-of-type(3) {
        animation-delay: calc(var(--duration) * 0.7);
      }
    }
  }

  @keyframes anim21Spans {
    0% {
      top: 0;
      left: 0;
    }
    12.5% {
      top: 0;
      left: 60%;
    }
    25% {
      top: 0;
      left: 60%;
    }
    37.5% {
      top: 60%;
      left: 60%;
    }
    50% {
      top: 60%;
      left: 60%;
    }
    62.5% {
      top: 60%;
      left: 0;
    }
    75% {
      top: 60%;
      left: 0;
    }
    87.5% {
      top: 0;
      left: 0;
    }
    100% {
      top: 0;
      left: 0;
    }
  }
</style>
