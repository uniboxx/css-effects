---
interface Props {
  class?: string;
  color?: string;
  duration?: string;
  ballSize?: string;
  number?: number;
}
const {
  class: className,
  duration = '.8s',
  color = '#fff',
  ballSize = '1rem',
  number = 5,
  ...rest
} = Astro.props;
---

<ul data-style="none" class={className} {...rest}>
  {
    Array.from({ length: 5 }, (_, index) => index + 1).map(() => {
      const delay = `${(Math.floor(Math.random() * number * 15) / 100).toFixed(2)}s`;
      return <li style={`--delay: ${delay}`} />;
    })
  }
</ul>

<style define:vars={{ duration, color, ballSize }}>
  ul {
    display: flex;
    justify-content: center;
    align-items: end;
    gap: calc(var(--ballSize) / 2);
    border-bottom: calc(var(--ballSize) / 4) solid var(--color);
    min-height: calc(var(--ballSize) * 4.25);
    color: var(--color);
    li {
      animation: jumping11 var(--duration) linear infinite;
      animation-delay: var(--delay);
      border-radius: 50%;
      background-color: var(--color);
      width: var(--ballSize);
      height: var(--ballSize);
    }
  }
  @keyframes jumping11 {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-300%);
    }
    100% {
      transform: translateY(0);
    }
  }
</style>
