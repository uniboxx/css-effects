---
// to add styles to the variable span element add them to the ".class span" selector
interface Props {
  fixedText?: string;
  varTexts?: string;
  varColor?: string;
  duration?: string;
  class?: string;
}
const {
  fixedText = 'I love Css',
  varTexts = 'TRANSITIONS, ANIMATIONS, TRANSFORMS',
  varColor = '#181464',
  class: className,
  duration = '4s',
  ...rest
} = Astro.props;

const regex = /(?<quantity>[\d\.]+)(?<unit>[a-z]+)/;
const result = duration.match(regex)!;
const quantity = +result.groups?.quantity!;
const unit = result.groups?.unit?.toLowerCase();
const fixDuration = unit === 's' ? quantity * 1000 : quantity;
const firstText = varTexts.split(',')[0];
---

<h3 class={className} {...rest}>
  {fixedText}
  <span data-texts={varTexts} data-duration={fixDuration}>{firstText}</span>
</h3>

<style define:vars={{ varColor }}>
  span {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
    color: var(--varColor);
    font-size: 1em;
    &.visible {
      opacity: 1;
    }
  }
</style>

<script>
  const span = document.querySelector('span') as HTMLSpanElement;
  let index = 0;
  const texts = span.dataset.texts?.split(',')!;
  const duration = +span.dataset.duration!;

  setInterval(() => {
    span.textContent = texts[index];
    span.classList.add('visible');
    index = (index + 1) % texts?.length;
    setTimeout(() => span.classList.remove('visible'), duration);
  }, duration + 500);
</script>
